# SPDX-License-Identifier: MIT

import numpy as np
from m1n1.ane.td.conv2d_t import conv2d_t

def get_conv2d_dims(
            filters=1, kernel_size=1, stride=1, 
            dilation_rate=1, padding='valid',
            batch_size=1, input_channels=5, input_size=8,
            ):

    input_dim = (batch_size, input_channels, input_size, input_size)
    weight_dim = (filters, input_channels, kernel_size, kernel_size)

    kernel_size_dilated = (kernel_size - 1) * dilation_rate + 1
    out_spatial_size = (input_size - kernel_size_dilated) // stride + 1
    output_dim = (batch_size, filters, out_spatial_size, out_spatial_size)
    return input_dim, weight_dim, output_dim

def conv2d_transform(input_size, input_channels=5):
    base = np.array(
      [0x2000000, 0x0, 0x422, 0x0, 0xfff86a, 0x0, 0x30009800, 0x0,
       0x1024025, 0x21, 0xf401f800, 0x40, 0x0, 0x81, 0x80, 0x80, 0x80,
       0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
       0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
       0x0, 0x0, 0x0, 0x0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
       0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x80, 0x80, 0x80,
       0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3c000000, 0x20002,
       0x1, 0x22, 0x5, 0x1, 0x20002, 0x1, 0x5000a021, 0x2041, 0x10001,
       0x2, 0x0, 0x0, 0x4044405, 0x100000, 0x0, 0x6c013800, 0x33881,
       0x8880, 0x0, 0x40, 0x80, 0x280, 0x280, 0x0, 0x0, 0x0, 0x0, 0x0,
       0x0, 0x0, 0x1002031, 0x0, 0x100, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
       0x0, 0x0, 0x0, 0x0, 0x44004800, 0x0, 0x500172, 0x0, 0x10, 0x50,
       0x50, 0x50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x500172, 0xa0, 0x10, 0x20,
       0x10, 0x10, 0xc008800, 0x0, 0x0, 0x0, 0x0, 0x1000c800, 0x82,
       0x101c00, 0x0, 0x0, 0x3c00, 0x18017800, 0xc1, 0x0, 0x40, 0x80,
       0x80, 0x80, 0x1302031])
    
    base = conv2d_t(base, input_size, input_channels)
    base = list(base)
    return base 
